version: "3.5"
services:
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      - backend
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
#      EUREKA_INSTANCE_HOSTNAME: eurekaserver
#      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
#      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks:
      - backend
    depends_on:
      - configserver
  gatewayserver:
    image: ostock/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_PROFILES_ACTIVE: aws-dev
#      PROFILE: "default"
#      SERVER_PORT: "8072"
#      CONFIGSERVER_PORT: "8071"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      EUREKASERVER_URI: "http://eurekaserver:8070/eureka"
#      EUREKASERVER_PORT: "8070"
    networks:
      backend:
        aliases:
          - "gateway"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  redisserver:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"
  licensing-service:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    ports:
      - "8180:8080"
    environment:
      SPRING_APPLICATION_NAME: licensing-service
      SPRING_PROFILES_ACTIVE: dev ,aws-dev
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
      SPRING_DATASOURCE_USER: postgres
      SPRING_DATASOURCE_PASSWORD: '{cipher}0927d4500872b0de2261621c34b0f16e56a3dc145733528ba895be0971949263'
      ENCRYPT_KEY: "IMSYMMETRIC"
    networks:
      - backend
    depends_on:
      - configserver
  organization-service:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_NAME: organization-service
      SPRING_PROFILES_ACTIVE: dev ,aws-dev
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
      SPRING_DATASOURCE_USER: postgres
      SPRING_DATASOURCE_PASSWORD: '{cipher}0927d4500872b0de2261621c34b0f16e56a3dc145733528ba895be0971949263'
      ENCRYPT_KEY: "IMSYMMETRIC"
    networks:
      - backend
    depends_on:
      - configserver
networks:
  backend:
    driver: bridge
